steps:
  # Correr los comandos de terraform cuando el trigger sea un pull request desde feature/infra a dev
  - name: 'gcr.io/cloud-builders/git'
    id: 'checkout'
    args: ['clone', '--depth=1', '--branch=dev', 'https://github.com/cinthyarondon/pepito-company-infrastructure.git']

  - name: 'gcr.io/cloud-builders/git'
    id: 'check-branch'
    entrypoint: sh
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "feature/infra" && "$BUILD_SOURCE_BRANCH_NAME" == "dev" ]]; then
        echo "Pull request desde feature/infra a dev detectado. Continuando con el pipeline."
        else
        echo "Este pull request no cumple los requisitos. Cancelando el pipeline."
        exit 1
        fi

  - name: 'hashicorp/terraform:1.2.2'
    id: 'terraform-backend-config'
    entrypoint: sh
    args:
      - '-c'
      - |
        export TF_BACKEND_CONFIG='{ "bucket": "pepito-dev-tfstate", "prefix": "env/dev" }'

  - name: 'hashicorp/terraform:1.2.2'
    id: 'terraform-plan'
    entrypoint: sh
    args:
      - '-c'
      - |
        cd environments/dev/
        echo pwd
        terraform init -backend-config=environments/dev/backend-dev.tfvars 

        if terraform workspace list | grep -q "dev"; then
          terraform workspace select dev
        else
          terraform workspace new dev
        fi

        terraform workspace show

        terraform plan -out=tfplan

  - name: 'hashicorp/terraform:1.2.2'
    id: 'terraform-apply'
    entrypoint: sh
    args:
      - '-c'
      - |
        if terraform workspace list | grep -q "dev"; then
          terraform workspace select dev
        fi

        terraform workspace show

        cd environments/dev/
        
        terraform apply tfplan
